function apiChange() { this.mainClass = document.querySelectorAll(".currencynet-init"), this.countryCode = ["USD", "NGN", "EUR"], this.endpoint = `http://localhost/currencynet/api/?url=` + window.location.origin + "/Mayorkun/", this.data = fetch(this.endpoint).then(function (a) { return a.json() }).then(function (a) { return a }), this.awaitLocation = () => { navigator.geolocation.getCurrentPosition(a => (latitude = a.coords.latitude, longitude = a.coords.longitude, console.log(a), new Promise(b => { b(a.coords) }))) }, this.getCurrentPosition = () => new Promise((a, b) => { navigator.geolocation.getCurrentPosition(b => a(b), a => b(a)) }), this.fetchCountry = a => { let b = a.latitude, c = a.longitude; fetch("https://maps.googleapis.com/maps/api/geocode/json?latlng=" + b + "," + c + "&key=AIzaSyCcIJVhO8eeO-QVoVTVKW3AH7QQtfwngPI").then(function (a) { return a.json() }).then(function (a) { return console.log(a), a }) }, this.getClassList = (a, b = "usd") => { let c = ""; let d = 0, e = "currencynet-init-" + b.toLowerCase(); return Array.prototype.forEach.call(a.classList, a => { a !== "currencynet-init" && a !== e && (d++, console.log(e), c += "\n " + d + "->" + a + "\n") }), c }, this.reWrite = async () => { let b = this.countryCode, c = this.mainClass, d = await this.data; if (d.status) { let e = d.data.website_currency.toUpperCase(); if (navigator.geolocation) { const d = await this.getCurrentPosition(); try { console.log(d); const f = d.coords.latitude, g = d.coords.longitude; console.log(g), console.log(f); let h = this.fetchCountry(d.coords); console.log(h), console.log(c), Array.prototype.forEach.call(c, b => { let c = 0; if (0 < +b.dataset.currencynetValue && +b.dataset["currencynet-value"] != NaN || 0 < +b.innerHTML && +b.innerHTML != NaN) { let d = +b.innerHTML ?? 0; c = +b.dataset.currencynetValue ?? d, b.innerHTML = a(e) } else console.warn(`Element with class List \n ${this.getClassList(b)} \n Element error : Expected an integer was given a string ( "${b.dataset.currencynetValue}" )`) }), Array.prototype.forEach.call(b, b => { let c = b; Array.prototype.forEach.call(document.querySelectorAll(".currencynet-init-" + b.toLowerCase()), b => { let d = 0; if (0 < +b.dataset.currencynetValue && +b.dataset["currencynet-value"] != NaN || 0 < +b.innerHTML && +b.innerHTML != NaN) { let f = +b.innerHTML ?? 0; d = +b.dataset.currencynetValue ?? f, console.log(d), b.innerHTML = e + " " + a(c) * d } else console.warn(`Element with class List \n ${this.getClassList(b, c)} \n Element error : Expected an integer was given a string ( "${b.dataset.currencynetValue}" )`) }) }) } catch (a) { console.log(a) } } else Array.prototype.forEach.call(c, b => { let c = 0; 0 < +b.dataset.currencynetValue && +b.dataset["currencynet-value"] != NaN ? (c = a(e, e), console.log(e, e), b.innerHTML = c) : console.warn(`Element with class List \n ${this.getClassList(b, currency)} \n Element error : Expected an integer was given a string ( "${b.dataset.currencynetValue}" )`) }) } else console.log(`Fails to convert \n Webaite not registered error JSON = ${this.data}`), console.log(this.data) }; let a = (a = "USD", b = "usd", c = 0) => 30 } window.addEventListener("load", () => { const a = new apiChange; a.reWrite() });